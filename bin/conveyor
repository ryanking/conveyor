#!/usr/bin/env ruby -KU

require 'optparse'
require 'rubygems'
require 'daemons/daemonize'
require 'rack'
require 'thin'

options = {:port => 8011, :daemonize => false}
opts = OptionParser.new do |opts|
  opts.summary_indent = " "
  opts.banner = "usage: #{$0} [options] <data directory>"

  opts.separator ""
  opts.separator "Options:"
  opts.on("-p PORT", Integer, "HTTP port number. Default: 8011") do |port|
    options[:port] = port
  end
  
  opts.on("-l LOGDIRECTORY", "Directory for log files.") do |log_dir|
    options[:log_directory] = log_dir
  end
  
  opts.on("-d", "Daemonize.") do |d|
    options[:daemonize] = d
  end
  
  opts.on("--unsafe", "Unsafe Mode.") do |d|
    options[:unsafe] = d
  end
  
  opts.on("--verbose", "Verbose mode. For debugging only.") do |d|
    options[:verbose] = d
  end
end

opts.parse!

unless ARGV.length == 1
  puts opts.help
  exit
end

$: << 'lib'

require 'conveyor/server'

if options[:daemonize]
  Daemonize.daemonize
end

app = Rack::Builder.new do
  map '/channels' do
    run Conveyor::App.new(ARGV[0], 
          :log_directory => options[:log_directory], 
          :unsafe_mode   => options[:unsafe], 
          :verbose       => options[:verbose])
  end
end

Rack::Handler::Thin.run(app, {:Host => '0.0.0.0', :Port => options[:port]})